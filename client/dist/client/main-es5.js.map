{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/logic.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","console","log","selector","templateUrl","styleUrls","config","url","window","location","hostname","options","AppModule","forRoot","declarations","imports","providers","bootstrap","GameComponent","logic","squares","Array","apply","map","_","value","status","winCombinations","startGame","getMessage","subscribe","message","forEach","s","msg","getSymbol","symbol","madeMove","move","index","myTurn","checkWinner","bool","newGame","i","clicked","c","winner","checkCombination","endGame","a","b","handleClick","LogicService","socket","emit","fromEvent","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  ngOnInit() {\n    console.log('%cBy Mordy Stern ðŸ˜€', 'color:powderBlue;background:#003342;font-size:2em;padding:20px');\n  }\n}\n","<app-game></app-game>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './game/game.component';\n\nconst config: SocketIoConfig = { url: window.location.hostname, options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LogicService } from './../logic.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  symbol: string;\n  myTurn: boolean;\n  msg: string;\n  endGame: string;\n  squares = Array.apply(null, Array(9)).map(_ => ({ value: '', status: '' }))\n  winCombinations = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    [0, 4, 8], [2, 4, 6]\n  ]\n\n  constructor(private logic: LogicService) { }\n\n  ngOnInit(): void {\n    this.logic.startGame()\n    this.logic.getMessage().subscribe((message: any) => {\n      if (message == 'opponent left') {\n        this.squares.forEach(s => s.value = s.status = '')\n      }\n      this.msg = message\n    })\n\n    this.logic.getSymbol().subscribe((symbol: string) => {\n      this.symbol = symbol\n    })\n\n    this.logic.madeMove().subscribe((move: any) => {\n      this.squares[move.index].value = move.symbol\n      this.myTurn = !this.myTurn\n      this.checkWinner()\n    })\n\n    this.logic.myTurn().subscribe((bool: boolean) => {\n      this.myTurn = bool\n    })\n  }\n\n  newGame() {\n    this.squares.forEach(s => s.value = s.status = '')\n    this.logic.newGame()\n  }\n\n  handleClick(i) {\n    if (!this.myTurn || this.squares[i].value || this.msg) return\n    this.squares[i].value = this.symbol\n    this.logic.clicked(i, this.symbol)\n    this.myTurn = !this.myTurn\n    this.checkWinner()\n  }\n\n  checkWinner() {\n    this.winCombinations.forEach((c: any) => {\n      let winner = this.checkCombination(c)\n      if (winner) {\n        c.forEach(i => this.squares[i].status = (winner == this.symbol ? 'won' : 'lost'))\n        this.msg = winner == this.symbol ? 'Yay! You won!!!' : 'Oops... Maybe next time'\n        this.endGame = winner == this.symbol ? 'won' : 'lost'\n      }\n    })\n  }\n\n  checkCombination([a, b, c]) {\n    if (this.squares[a].value == this.squares[b].value && this.squares[b].value == this.squares[c].value)\n      return this.squares[a].value\n    else\n      return ''\n  }\n\n}\n","<h1>&nbsp;\n    <span *ngIf=\"!msg\">{{myTurn ? 'Your' : 'Opponents'}} turn!</span>\n</h1>\n<table [class.disable]=\"!myTurn\">\n    <tbody>\n        <tr>\n            <td [class]=\"squares[0].status\" (click)=\"handleClick(0)\">{{squares[0].value}}</td>\n            <td [class]=\"squares[1].status\" (click)=\"handleClick(1)\">{{squares[1].value}}</td>\n            <td [class]=\"squares[2].status\" (click)=\"handleClick(2)\">{{squares[2].value}}</td>\n        </tr>\n        <tr>\n            <td [class]=\"squares[3].status\" (click)=\"handleClick(3)\">{{squares[3].value}}</td>\n            <td [class]=\"squares[4].status\" (click)=\"handleClick(4)\">{{squares[4].value}}</td>\n            <td [class]=\"squares[5].status\" (click)=\"handleClick(5)\">{{squares[5].value}}</td>\n        </tr>\n        <tr>\n            <td [class]=\"squares[6].status\" (click)=\"handleClick(6)\">{{squares[6].value}}</td>\n            <td [class]=\"squares[7].status\" (click)=\"handleClick(7)\">{{squares[7].value}}</td>\n            <td [class]=\"squares[8].status\" (click)=\"handleClick(8)\">{{squares[8].value}}</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"new-game\" (click)=\"newGame()\">New Game</div>\n\n<div [class]=\"'msg ' + endGame\" *ngIf=\"msg\">\n    {{msg}}\n</div>","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogicService {\n\n  constructor(private socket: Socket) { }\n\n  startGame() {\n    this.socket.emit(\"start\");\n  }\n  newGame() {\n    this.socket.emit(\"newGame\");\n  }\n  getMessage() {\n    return this.socket.fromEvent(\"message\")\n  }\n  getSymbol() {\n    return this.socket.fromEvent(\"symbol\")\n  }\n  clicked(index, symbol) {\n    this.socket.emit(\"clicked\", { index, symbol })\n  }\n  madeMove() {\n    return this.socket.fromEvent(\"madeMove\")\n  }\n  myTurn() {\n    return this.socket.fromEvent(\"myTurn\")\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}